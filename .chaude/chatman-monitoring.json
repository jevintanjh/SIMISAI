{
  "llm_monitoring": {
    "connectivity_checks": {
      "sagemaker_endpoint": {
        "endpoint_name": "simisai-sealion-realtime-endpoint",
        "health_check_interval": "30 seconds",
        "timeout_threshold": "10 seconds",
        "retry_attempts": 3,
        "fallback_trigger": "response_time > 5 seconds OR endpoint_status != 'InService'"
      },
      "lambda_function": {
        "function_name": "simisai-hybrid-llm-service",
        "health_check_interval": "60 seconds",
        "timeout_threshold": "30 seconds",
        "memory_threshold": "80%",
        "error_rate_threshold": "5%"
      }
    },
    "response_time_tracking": {
      "target_response_time": "< 2 seconds",
      "warning_threshold": "3 seconds",
      "critical_threshold": "5 seconds",
      "tracking_metrics": [
        "api_gateway_latency",
        "lambda_execution_time",
        "sagemaker_inference_time",
        "total_end_to_end_time"
      ],
      "alert_channels": [
        "cloudwatch_alarms",
        "sns_notifications",
        "slack_integration"
      ]
    },
    "performance_monitoring": {
      "metrics_to_track": {
        "requests_per_minute": "target: < 1000",
        "error_rate": "target: < 1%",
        "success_rate": "target: > 99%",
        "fallback_usage": "target: < 10%",
        "concurrent_users": "target: < 500"
      },
      "alert_conditions": {
        "high_error_rate": "error_rate > 5% for 5 minutes",
        "slow_response": "avg_response_time > 3 seconds for 3 minutes",
        "high_fallback": "fallback_usage > 20% for 10 minutes",
        "endpoint_down": "sagemaker_endpoint_status != 'InService'"
      }
    }
  },
  "security_guardrails": {
    "content_filtering": {
      "inappropriate_content": {
        "blocked_keywords": [
          "hack", "exploit", "bypass", "crack",
          "illegal", "harmful", "dangerous",
          "spam", "scam", "phishing"
        ],
        "medical_misinformation": {
          "blocked_patterns": [
            "cure for cancer",
            "miracle treatment",
            "alternative medicine without doctor",
            "self-diagnosis recommendations"
          ],
          "allowed_patterns": [
            "consult your doctor",
            "seek medical advice",
            "emergency medical care"
          ]
        }
      },
      "response_templates": {
        "inappropriate_content": "I'm sorry, but I can only help with medical device guidance. Please ask me about thermometers, blood pressure monitors, or other medical devices.",
        "medical_misinformation": "I can only provide general guidance for medical device usage. For medical advice, please consult your healthcare provider.",
        "abuse_detection": "I'm here to help with medical device guidance. Please keep our conversation focused on that topic."
      }
    },
    "rate_limiting": {
      "user_limits": {
        "requests_per_minute": 10,
        "requests_per_hour": 100,
        "requests_per_day": 500,
        "concurrent_sessions": 3
      },
      "ip_limits": {
        "requests_per_minute": 50,
        "requests_per_hour": 500,
        "requests_per_day": 2000
      },
      "rate_limit_responses": {
        "too_many_requests": "You're sending messages too quickly. Please wait a moment before trying again.",
        "daily_limit_reached": "You've reached your daily limit for chat assistance. Please try again tomorrow.",
        "suspicious_activity": "Unusual activity detected. Please contact support if you need assistance."
      }
    },
    "abuse_detection": {
      "patterns_to_detect": {
        "spam_behavior": [
          "repeated_identical_messages",
          "rapid_message_sending",
          "excessive_question_marks",
          "random_character_input"
        ],
        "harassment": [
          "inappropriate_language",
          "threatening_content",
          "personal_attacks",
          "offensive_comments"
        ],
        "system_abuse": [
          "attempting_to_access_admin_functions",
          "trying_to_execute_code",
          "manipulating_api_requests",
          "bypassing_security_measures"
        ]
      },
      "response_actions": {
        "warning": "Please keep our conversation focused on medical device guidance.",
        "temporary_block": "Your access has been temporarily restricted. Please try again later.",
        "permanent_block": "Your access has been permanently restricted. Contact support for assistance."
      }
    }
  },
  "monitoring_dashboard": {
    "real_time_metrics": {
      "active_users": "Current number of users in chat",
      "response_times": "Average response time in milliseconds",
      "error_rate": "Percentage of failed requests",
      "llm_status": "SEA-LION endpoint health status",
      "fallback_usage": "Percentage of requests using fallback"
    },
    "historical_data": {
      "daily_statistics": "24-hour performance trends",
      "weekly_trends": "7-day performance analysis",
      "monthly_reports": "30-day usage patterns",
      "incident_logs": "Security and performance incidents"
    },
    "alerting_system": {
      "immediate_alerts": [
        "LLM endpoint down",
        "High error rate",
        "Security breach attempt",
        "System overload"
      ],
      "scheduled_reports": [
        "Daily performance summary",
        "Weekly security report",
        "Monthly usage analytics"
      ]
    }
  },
  "incident_response": {
    "llm_connectivity_issues": {
      "detection": "Endpoint status check fails or response time exceeds threshold",
      "response": "Activate fallback system and notify DevOps team",
      "recovery": "Monitor endpoint recovery and switch back to primary LLM",
      "escalation": "If fallback fails, escalate to System Architect"
    },
    "security_incidents": {
      "detection": "Abuse patterns or malicious requests detected",
      "response": "Block offending IP/user and log incident",
      "investigation": "Analyze attack patterns and strengthen defenses",
      "escalation": "Report to security team for further investigation"
    },
    "performance_degradation": {
      "detection": "Response times or error rates exceed thresholds",
      "response": "Scale resources and optimize performance",
      "monitoring": "Track recovery and prevent recurrence",
      "escalation": "If issues persist, escalate to DevOps team"
    }
  }
}


